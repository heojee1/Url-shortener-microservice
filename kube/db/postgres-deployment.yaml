apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: shortener-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - kubeclass-187
                - kubeclass-188
      containers:
        - name: postgres-container
          image: postgres:14.1-alpine
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash","-c","sleep 20 && PGPASSWORD=$POSTGRES_PASSWORD psql $POSTGRES_DB -U $POSTGRES_USER -c \'CREATE TABLE IF NOT EXISTS users ( id SERIAL PRIMARY KEY, username VARCHAR (50) UNIQUE NOT NULL, password VARCHAR NOT NULL); CREATE TABLE IF NOT EXISTS urls ( id SERIAL PRIMARY KEY, original VARCHAR NOT NULL, short VARCHAR (50) UNIQUE NOT NULL, username VARCHAR (50) NOT NULL, FOREIGN KEY (username) REFERENCES users(username));\'"] 
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: postgres-pv-claim